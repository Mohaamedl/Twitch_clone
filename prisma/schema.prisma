// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  
}

generator client {
  provider = "prisma-client-js"
}



model User {
  id String  @id @default(uuid())
  username String @unique
  imageUrl String @db.Text
  externalUserId String @unique
  bio String? @db.Text

  following Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")


  blocking Block[] @relation("Blocking")
  blockedBy Block[] @relation("BlockedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id String @id @default(uuid())
  followerId String
  followingId String

  follower User @relation(name:"Following",fields: [followerId],references:[id], onDelete: Cascade)
  following User @relation(name:"FollowedBy", fields:[followingId],references: [id], onDelete:Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([followerId,followingId])
  @@index([followerId])
  @@index([followingId])


}

model Block {
  id String @id @default(uuid())
  blockedId String
  blockerId String

  blocker User @relation("Blocking",fields:[blockerId], references: [id],onDelete:Cascade)
  blocked User @relation("BlockedBy", fields:[blockedId], references:[id],onDelete:Cascade)

  @@unique([blockedId,blockerId])
  @@index([blockedId])
  @@index([blockerId])

}
